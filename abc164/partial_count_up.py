"""
部分和数え上げ問題

n個の正の整数 a[0],a[1],…,a[n−1]a[0],a[1],…,a[n−1] と
正の整数 A が与えられる。これらの整数から何個かの整数を選んで総和が 
A になるようにする方法が何通りあるかを求めよ。ただし、答えがとても大きくなる可能性があるので、
1,000,000,009 で割った余りで出力せよ。

【制約】
・1≤n≤1001≤n≤100
・1≤a[i]≤10001≤a[i]≤1000
・1≤A≤100001≤A≤10000

何通りあるかをdpの要素として追加していけばいい
加えることができる場合，dp[i+1][j] = dp[i][j-a[i]] + dp[i][j]となる

4
4 1 1 1
5
"""

n = int(input())
a = list(map(int, input().split(' ')))
A = int(input())

# DPテーブルを作る
dp = [[0]*(A+1) for _ in range(n + 1)]
# 0個の整数の和は0なのでdp[0][0]はtrueの1
dp[0][0] = 1

for i in range(n):
  for j in range(A+1):
    if j >= a[i]:
      dp[i+1][j] = dp[i][j-a[i]] + dp[i][j]
    else:
      dp[i+1][j] = dp[i][j]

print(dp[n][A])
print(dp)